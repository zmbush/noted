x--expand-yaml-anchors--remove:
  - &checkout
    name: Checkout sources
    uses: actions/checkout@v2

  - &default-toolchain
    profile: minimal
    toolchain: 1.56.1
    components: clippy, rustfmt
    override: true

  - &install-toolchain
    name: Install toolchain
    uses: actions-rs/toolchain@v1
    with: *default-toolchain

  - &rust-env
    RUSTFLAGS: '-C link-dead-code'
    DATABASE_URL: postgres://postgres:postgres@localhost/noted
    MIGRATION_DIRECTORY: db/migrations
    DIESEL_CONFIG_FILE: db/diesel.toml

  - &install-diesel
    name: Install diesel_cli
    run: |
      which diesel || cargo install diesel_cli --no-default-features --features postgres

  - &install-postgres
    name: Install postgres
    run: |
      sudo apt-get update
      sudo apt-get install -y libpq-dev postgresql
      echo "host    all             all             127.0.0.1/32            md5" > sudo tee -a /etc/postgresql/10/main/pg_hba.conf
      sudo service postgresql restart && sleep 3
      sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"
      sudo service postgresql restart && sleep 3

  - &create-database
    name: Create database
    run: |
      sudo -u postgres psql -c 'create database noted;' -U postgres
      diesel migration run --locked-schema

name: CI
on:
  push:
    branches:
      - main
      - staging
      - trying
  pull_request:
    branches:
      - main

jobs:
  coverage:
    name: Rust Coverage
    runs-on: ubuntu-latest
    env: *rust-env
    steps:
      - *checkout
      - <<: *install-toolchain
        with:
          <<: *default-toolchain
          toolchain: nightly
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-cov
      - *install-diesel
      - *install-postgres
      - *create-database
      - name: Clean target
        uses: actions-rs/cargo@v1
        with:
          command: clean
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        with:
          command: test
          args: --all --all-features --no-fail-fast

      - name: Pre-Install grcov
        run: |
          which grcov || cargo install grcov

      - name: Run grcov
        id: coverage
        uses: actions-rs/grcov@v0.1

      - name: Upload Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.coverage.outputs.report }}
          fail_ci_if_error: true
          verbose: true
          flags: backend

  check:
    name: Rust Build/Test/Lint
    runs-on: ubuntu-latest
    env: *rust-env

    steps:
      - *checkout
      - *install-toolchain

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - *install-diesel
      - *install-postgres
      - *create-database

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run clippy action to produce annotations
        # Don't run on dependabot PRs
        # https://github.com/actions-rs/clippy-check/issues/2#issuecomment-807852653
        if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: Run clippy manually without annotations
        if: github.event.pull_request.head.repo.full_name != github.repository || github.actor == 'dependabot[bot]'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all

  node-ci:
    name: Node Build/Test/Lint
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Build Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build Package
        run: npm ci && npm run build
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Upload Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/coverage-final.json
          flags: ui
          fail_ci_if_error: true
          verbose: true
