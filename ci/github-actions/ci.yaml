x--expand-yaml-anchors--remove:
  - &checkout
    name: Checkout sources
    uses: actions/checkout@v2

name: CI
on: [push, pull_request]

jobs:
  check:
    name: Rust Build/Test/Lint
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: '-C link-dead-code'
      DATABASE_URL: postgres://postgres:postgres@localhost/noted
      MIGRATION_DIRECTORY: db/migrations
      DIESEL_CONFIG_FILE: db/diesel.toml

    steps:
      - *checkout
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.47.0
          override: true
          components: rustfmt, clippy

      - name: Install kcov packages
        run: sudo apt-get install -y libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc binutils-dev libiberty-dev

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install diesel_cli
        uses: actions-rs/install@v0.1
        with:
          crate: diesel_cli
          version: 1.4.1
          use-tool-cache: true

      - name: Install cargo-kcov
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-kcov
          use-tool-cache: true

      - name: Install postgres
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev postgresql
          echo "host    all             all             127.0.0.1/32            md5" > sudo tee -a /etc/postgresql/10/main/pg_hba.conf
          sudo service postgresql restart && sleep 3
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"
          sudo service postgresql restart && sleep 3

      - name: Create database
        run: |
          sudo -u postgres psql -c 'create database noted;' -U postgres

      - name: Migrate Database
        run: diesel migration run --locked-schema

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Kcov
        run: |
          wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
          tar xzf master.tar.gz &&
          cd kcov-master &&
          mkdir build &&
          cd build &&
          cmake .. &&
          make &&
          make install DESTDIR=../../kcov-build &&
          cd ../.. &&
          rm -rf kcov-master &&
          cargo kcov --all --no-clean-rebuild --kcov kcov-build/usr/local/bin/kcov &&
          bash <(curl -s https://codecov.io/bash) &&
          echo "Uploaded code coverage"

  node-ci:
    name: Node Build/Test/Lint
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Build Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build Package
        run: npm ci && npm run build
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Upload Codecov
        uses: codecov/codecov-action@v2
