x--expand-yaml-anchors--remove:
  - &checkout
    name: Checkout sources
    uses: actions/checkout@v2

name: CI
on: [push, pull_request]

jobs:
  check:
    name: Rust Build/Test/Lint
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: '-C link-dead-code'
      DATABASE_URL: postgres://postgres:postgres@localhost/noted
      MIGRATION_DIRECTORY: db/migrations
      DIESEL_CONFIG_FILE: db/diesel.toml

    steps:
      - *checkout
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install diesel_cli
        run: |
          which diesel || cargo install diesel_cli --no-default-features --features postgres 

      - name: Install postgres
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev postgresql
          echo "host    all             all             127.0.0.1/32            md5" > sudo tee -a /etc/postgresql/10/main/pg_hba.conf
          sudo service postgresql restart && sleep 3
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"
          sudo service postgresql restart && sleep 3

      - name: Create database
        run: |
          sudo -u postgres psql -c 'create database noted;' -U postgres

      - name: Migrate Database
        run: diesel migration run --locked-schema

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        with:
          command: test
          args: --all

      - name: GRCov
        uses: actions-rs/grcov@v0.1

      - name: Upload Codecov
        uses: codecov/codecov-action@v2

  node-ci:
    name: Node Build/Test/Lint
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Build Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build Package
        run: npm ci && npm run build
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Upload Codecov
        uses: codecov/codecov-action@v2
