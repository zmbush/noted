x--expand-yaml-anchors--remove:
  - &checkout
    name: Checkout sources
    uses: actions/checkout@v2

name: CI
on: [push, pull_request]

jobs:
  check:
    name: Rust Build/Test/Lint
    runs-on: ubuntu-latest

    steps:
      - *checkout
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.47.0
          override: true
          components: rustfmt, clippy

      - name: Install diesel_cli
        uses: actions-rs/install@v0.1
        with:
          crate: diesel_cli
          version: 1.4.1
          use-tool-cache: true

      - name: Install postgres
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev postgresql
          echo "host    all             all             127.0.0.1/32            md5" > sudo tee -a /etc/postgresql/10/main/pg_hba.conf
          sudo service postgresql restart && sleep 3
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"
          sudo service postgresql restart && sleep 3

      - name: Create database
        run: |
          sudo -u postgres psql -c 'create database noted;' -U postgres
          echo "DATABASE_URL=postgres://postgres:postgres@localhost/noted" >> $GITHUB_ENV
          echo "MIGRATION_DIRECTORY=db/migrations" >> $GITHUB_ENV
          echo "DIESEL_CONFIG_FILE=db/diesel.toml" >> $GITHUB_ENV

      - name: Migrate Database
        run: diesel migration run --locked-schema

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  node-ci:
    name: Node Build/Test/Lint
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '10'
      - name: Build Package
        run: npm ci && npm run build
      # TODO: Enable eslint
      # - name: Lint
      #   run: npm run lint
      - name: Test
        run: npm run test
