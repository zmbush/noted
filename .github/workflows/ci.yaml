#############################################################
#   WARNING: automatically generated file, DO NOT CHANGE!   #
#############################################################

# This file was automatically generated by the expand-yaml-anchors tool. The
# source file that generated this one is:
#
#   ci/github-actions/ci.yaml
#
# Once you make changes to that file you need to run:
#
#   cargo run --manifest-path tools/expand-yaml-anchors/Cargo.toml -- generate $PWD
#
# The CI build will fail if the tool is not run after changes to this file.

---
name: CI
"on":
  - push
  - pull_request
jobs:
  check:
    name: Rust Build/Test/Lint
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-C link-dead-code"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.47.0
          override: true
          components: "rustfmt, clippy"
      - name: Install kcov packages
        run: sudo apt-get install -y libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc binutils-dev libiberty-dev
      - uses: actions/cache@v2
        with:
          path: "~/.cargo/bin/\n~/.cargo/registry/index/\n~/.cargo/registry/cache/\n~/.cargo/git/db/\ntarget/\n"
          key: "${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}"
      - name: Install diesel_cli
        uses: actions-rs/install@v0.1
        with:
          crate: diesel_cli
          version: 1.4.1
          use-tool-cache: true
      - name: Install cargo-kcov
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-kcov
          use-tool-cache: true
      - name: Install postgres
        run: "sudo apt-get update\nsudo apt-get install -y libpq-dev postgresql\necho \"host    all             all             127.0.0.1/32            md5\" > sudo tee -a /etc/postgresql/10/main/pg_hba.conf\nsudo service postgresql restart && sleep 3\nsudo -u postgres psql -c \"ALTER USER postgres PASSWORD 'postgres';\"\nsudo service postgresql restart && sleep 3\n"
      - name: Create database
        run: "sudo -u postgres psql -c 'create database noted;' -U postgres\necho \"DATABASE_URL=postgres://postgres:postgres@localhost/noted\" >> $GITHUB_ENV\necho \"MIGRATION_DIRECTORY=db/migrations\" >> $GITHUB_ENV\necho \"DIESEL_CONFIG_FILE=db/diesel.toml\" >> $GITHUB_ENV\n"
      - name: Migrate Database
        run: diesel migration run --locked-schema
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--verbose --all"
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: "--all -- --check"
      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Generate Kcov
        run: "wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&\ntar xzf master.tar.gz &&\ncd kcov-master &&\nmkdir build &&\ncd build &&\ncmake .. &&\nmake &&\nmake install DESTDIR=../../kcov-build &&\ncd ../.. &&\nrm -rf kcov-master &&\ncargo kcov --all --no-clean-rebuild --kcov kcov-build/usr/local/bin/kcov &&\nbash <(curl -s https://codecov.io/bash) &&\necho \"Uploaded code coverage\"\n"
  node-ci:
    name: Node Build/Test/Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Build Package
        run: npm ci && npm run build
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Upload Codecov
        uses: codecov/codecov-action@v2
